import numpy as np
import pandas as pd
import networkx as nx

ground_truth = {
    "asia": [(0, 1), (1, 0), (1, 5), (2, 3), (2, 4), (3, 2), (3, 5), (4, 2), (4, 7), (7, 4)],
    "cancer": [(0, 2), (1, 2), (2, 3), (4, 2)],
    "earthquake": [(0, 2), (1, 2), (2, 3), (2, 4)],
    "survey": [(2, 3), (2, 4), (4, 2), (4, 5), (5, 3), (5, 4)],
    # "sachs": [(0, 1), (0, 7), (1, 0), (1, 3), (1, 7), (2, 7), (2, 8), (3, 1), (3, 7), (3, 8), (3, 10), (4, 7), (4, 8), (5, 6), (5, 9), (6, 5), (6, 9), (7, 0), (7, 1), (7, 2), (7, 3), (7, 4), (7, 8), (7, 10), (8, 2), (8, 3), (8, 4), (8, 7), (8, 10), (9, 5), (9, 6), (10, 3), (10, 7), (10, 8)],
    "sachs": [(0, 1), (1, 0), (1, 3), (1, 7), (2, 8), (3, 1), (3, 7), (3, 8), (3, 10), (4, 7), (4, 10), (5, 6), (5, 9), (6, 5), (6, 9), (7, 1), (7, 3), (7, 10), (8, 2), (8, 3), (8, 7), (9, 5), (9, 6)],
    "child": [(0, 18), (1, 7), (2, 7), (2, 8), (2, 10), (2, 16), (3, 9), (3, 17), (4, 10), (4, 17), (4, 18), (5, 12), (6, 14), (8, 2), (8, 12), (9, 3), (11, 13), (11, 14), (11, 15), (11, 16), (11, 18), (12, 8), (13, 11), (13, 18), (13, 19), (14, 6), (14, 11), (15, 1), (15, 11), (16, 1), (16, 2), (16, 11), (17, 3), (17, 4), (17, 5), (19, 5), (19, 13)],
    # 'child': [(1, 7), (2, 7), (2, 8), (3, 9), (3, 17), (4, 10), (5, 12), (6, 14), (9, 3), (11, 13), (11, 14), (11, 15), (11, 16), (11, 17), (11, 18), (11, 19), (13, 11), (13, 19), (14, 6), (14, 11), (15, 1), (15, 11), (16, 1), (16, 2), (16, 11), (17, 2), (17, 3), (17, 4), (17, 5), (17, 11), (18, 4), (18, 11), (19, 5), (19, 11), (19, 13)],
    # 'alarm': [(0, 5), (1, 4), (2, 4), (3, 4), (3, 5), (3, 6), (4, 1), (4, 2), (4, 3), (4, 5), (5, 4), (5, 6), (6, 35), (7, 8), (9, 11), (10, 9), (10, 11), (11, 9), (12, 33), (13, 14), (14, 13), (14, 33), (14, 36), (16, 25), (17, 24), (17, 30), (18, 19), (19, 20), (20, 33), (21, 22), (22, 21), (22, 23), (23, 20), (24, 17), (24, 23), (24, 30), (24, 31), (26, 29), (27, 28), (28, 27), (28, 29), (29, 25), (30, 15), (30, 17), (30, 24), (30, 31), (31, 19), (31, 24), (31, 30), (31, 32), (32, 15), (32, 31), (32, 33), (34, 8), (34, 9), (34, 11), (34, 33), (34, 35), (35, 36)],
    "alarm": [(0, 5), (0, 26), (1, 4), (2, 4), (3, 4), (3, 6), (4, 1), (4, 2), (4, 3), (5, 0), (5, 6), (6, 3), (6, 5), (6, 35), (7, 8), (7, 26), (9, 10), (9, 11), (10, 9), (10, 11), (11, 9), (11, 10), (12, 33), (13, 14), (14, 33), (14, 36), (16, 30), (16, 31), (17, 16), (17, 30), (17, 31), (18, 14), (18, 19), (19, 18), (19, 20), (20, 19), (20, 33), (21, 22), (22, 21), (22, 23), (24, 23), (25, 16), (25, 30), (27, 28), (28, 27), (28, 29), (29, 26), (29, 28), (30, 15), (30, 16), (30, 17), (30, 25), (30, 31), (31, 30), (31, 32), (32, 15), (32, 33), (34, 8), (34, 33), (34, 35), (35, 36)],
}

def bn_data(name, feature=None, size=10000):
    data = pd.read_csv("../data/"+name+".csv")
    data = data.drop("Unnamed: 0", axis=1)
    data = data.astype('category')
    data = data.apply(lambda x: x.cat.codes)
    data = np.array(data)
    data = data.astype(int)

    node_size = data.shape[1]
    g_answer = nx.DiGraph()
    g_answer.add_nodes_from(np.arange(node_size))
    g_answer.add_edges_from(ground_truth[name])

    if feature is None:
        feature = data.shape[1]

    return data[:size, :feature], g_answer

if __name__ == '__main__':
    data, g_answer = bn_data('alarm')
    print(data)
    print(g_answer.edges())